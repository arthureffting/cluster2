import argparse
import os
import sys

from scripts.utils.character_set import create_char_set

parser = argparse.ArgumentParser(description='Prepare data for training')
parser.add_argument('--dataset', default="iam")
args = parser.parse_args()

# Get environmental data generated by the bash script
data_folder = os.getenv("DATA_FOLDER") if os.getenv("DATA_FOLDER") else "data"
originals_folder = os.getenv("ORIGINAL_FOLDER") if os.getenv("ORIGINAL_FOLDER") else "data/original"
splits_folder = os.getenv("SPLIT_FOLDER") if os.getenv("SPLIT_FOLDER") else "data/split"

# Should store everything under data/sfr/<dataset>
target_folder = os.path.join(data_folder, "sfrs", args.dataset)
pages_folder = os.path.join(target_folder, "pages")
database_original_folder = os.path.join(originals_folder, args.dataset)
database_splits = os.path.join(splits_folder, args.dataset)

training_json = os.path.join(pages_folder, "training.json")
testing_json = os.path.join(pages_folder, "testing.json")
target_json = os.path.join(pages_folder, "character_set.json")

print("[Generating character set] Model: SFR | Dataset: " + args.dataset)

if not os.path.isfile(training_json) or not os.path.isfile(testing_json):
    print("[Data not found] Make sure to run 'steps/prepare_images' for the " + args.dataset + " dataset first.")
    sys.exit(1)

create_char_set(target_json, [training_json, testing_json])
